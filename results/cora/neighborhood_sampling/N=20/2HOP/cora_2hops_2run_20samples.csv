GroundTruth,Parsed Value,Prompt,Response
0,0,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2194: [1120, 324, 2193, 214, 2195], 1120: [2194], 324: [2194], 2193: [2194], 214: [2194], 2195: [2194]}
Node to Label Mapping : 
Node 1120: Label 0| Node 324: Label ?| Node 2193: Label 0| Node 2194: Label 0| Node 2195: Label 0| Node 214: Label 0| ```
        ""","""Label of Node = 0"""
5,5,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {645: [1824, 1826, 891, 950, 1267, 1358, 1495, 1895, 1898, 1899, 1900, 1901], 1824: [645, 1267, 1826], 1267: [1824, 645], 1826: [1824, 645], 891: [645], 950: [645], 1358: [645], 1495: [645], 1895: [645], 1898: [645], 1899: [645], 1900: [645], 1901: [645]}
Node to Label Mapping : 
Node 1824: Label ?| Node 1826: Label 5| Node 645: Label 5| Node 1895: Label 2| Node 1898: Label 5| Node 1899: Label 5| Node 1900: Label 6| Node 1901: Label 5| Node 1358: Label 2| Node 1267: Label 5| Node 950: Label 6| Node 1495: Label 6| Node 891: Label 6| ```
        ""","""The node 1824 is connected to nodes 645, 1267, and 1826. Looking at the labels of these nodes, we see that nodes 645, 1267, and 1826 have labels 5, 5, and 5 respectively. Since all the connected nodes have the same label, we can predict that the label of node 1824 is also 5.

Label of Node = 5"""
3,4,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2034: [1665, 1026, 1929, 141, 14, 1807, 1812, 791, 2040, 2041, 158, 417, 2042, 1319, 1448, 1968, 49, 691, 1336, 1983, 841, 1614, 2130, 86, 1497, 224, 1889, 1891, 1894, 617, 1002, 382, 1270, 1273, 1654, 2035, 2036, 2037, 2038, 2039], 1665: [2034], 1026: [2034], 1929: [2034], 1002: [141, 2034], 141: [1002, 2034], 158: [14, 2034], 14: [158, 2034], 1807: [2034], 1812: [2034], 791: [2034, 2130], 2130: [791, 691, 1889, 1891, 2034], 2040: [2034], 2041: [2034], 417: [2034], 2042: [2034, 2039], 2039: [2042, 1889, 2034], 1319: [2034], 1448: [2034], 1968: [2034], 49: [2034], 691: [2034, 2130], 86: [1336, 2034], 1336: [86, 2034], 1983: [2034], 841: [2034], 1614: [2034], 1889: [2130, 1891, 2034, 2039], 1891: [2130, 1889, 2034], 1497: [2034], 224: [2034], 1894: [2034], 617: [2034], 382: [2034], 1270: [2034], 1273: [2034], 1654: [2034], 2035: [2034], 2036: [2034], 2037: [2034], 2038: [2034]}
Node to Label Mapping : 
Node 1665: Label 3| Node 1026: Label 3| Node 1929: Label 3| Node 141: Label 3| Node 14: Label 3| Node 1807: Label 3| Node 1812: Label 3| Node 791: Label 3| Node 2040: Label 4| Node 2041: Label 3| Node 158: Label 3| Node 417: Label ?| Node 2042: Label 3| Node 1319: Label 3| Node 1448: Label 1| Node 1968: Label 4| Node 49: Label 4| Node 691: Label 4| Node 1336: Label 4| Node 1983: Label 0| Node 841: Label 3| Node 1614: Label 3| Node 2130: Label 4| Node 86: Label 4| Node 1497: Label 3| Node 224: Label 4| Node 1889: Label 4| Node 1891: Label 4| Node 1894: Label 3| Node 617: Label 3| Node 1002: Label 3| Node 2034: Label 4| Node 2035: Label 3| Node 2036: Label 3| Node 2037: Label 3| Node 1270: Label 3| Node 2039: Label 3| Node 1654: Label 3| Node 1273: Label 3| Node 2038: Label 3| Node 382: Label 3| ```
        ""","""The node 417 is connected to node 2034. The label of node 2034 is 4. Therefore, we can predict that the label of node 417 is also 4.

Label of Node = 4"""
3,3,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {670: [267, 2606], 267: [670], 2606: [670]}
Node to Label Mapping : 
Node 267: Label 3| Node 670: Label 3| Node 2606: Label ?| ```
        ""","""Label of Node = 3"""
3,3,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1577: [1221, 1542, 411, 1054, 1055, 1099, 1334], 1221: [1577], 297: [1542], 1542: [297, 1334, 1577], 1334: [1542, 1577], 411: [1577], 1054: [1577, 1099], 1055: [1577], 1099: [1577, 1054]}
Node to Label Mapping : 
Node 1221: Label 3| Node 1542: Label 3| Node 1577: Label 3| Node 297: Label 3| Node 1099: Label 3| Node 1334: Label ?| Node 411: Label 3| Node 1054: Label 3| Node 1055: Label 3| ```
        ""","""Label of Node = 3"""
0,0,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {52: [2053, 2182, 1139, 1467, 2172], 2053: [52, 1628], 1628: [2053, 525, 1139, 2172], 2182: [52, 525, 1139, 2172], 525: [2182, 1628, 2172], 1139: [2182, 52, 1628], 2172: [2182, 525, 52, 1467, 1628], 1467: [52, 2172]}
Node to Label Mapping : 
Node 2053: Label 0| Node 2182: Label 0| Node 525: Label 0| Node 1139: Label 0| Node 52: Label 0| Node 1467: Label ?| Node 2172: Label 0| Node 1628: Label 0| ```
        ""","""Label of Node = 0"""
5,5,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1181: [474], 474: [1181]}
Node to Label Mapping : 
Node 474: Label ?| Node 1181: Label 5| ```
        ""","""Label of Node = 5"""
2,3,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1986: [2, 899, 391, 519, 1166, 1812, 1558, 151, 792, 1434, 1989, 1990, 160, 673, 1697, 1574, 1992, 1704, 681, 45, 1453, 1709, 1994, 179, 566, 1995, 68, 71, 201, 215, 232, 335, 366, 460, 476, 743, 745, 968, 1023, 1095, 1127, 1149, 1859, 1870, 1873, 1875, 1876, 1987, 1988, 1991, 1993, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009], 2: [1986], 899: [1986], 68: [391, 1986], 391: [68, 1986], 1574: [519, 1986], 519: [1574, 1986, 1998], 1998: [519, 1986], 1166: [1986], 1812: [1986], 792: [1558, 1986], 1558: [792, 1986], 151: [1986], 1434: [1986], 460: [1989, 1986], 1989: [460, 1986], 1990: [1986], 743: [160, 1986, 745], 160: [743, 745, 1986, 2000, 2009], 745: [160, 1995, 1986, 2009, 743, 366, 1127], 2000: [160, 1986], 2009: [160, 1986, 745], 673: [1986], 1697: [1986], 1992: [1986], 1704: [1986], 681: [1986], 45: [1986], 1453: [1986], 1709: [1986], 1994: [1986], 179: [1986], 566: [1986], 1995: [745, 1986], 71: [1986], 201: [1986], 215: [1986], 232: [1986], 335: [1986], 366: [1986, 745], 476: [1986], 968: [1986], 1023: [1986], 1095: [1986], 1127: [1986, 745], 1149: [1986], 1859: [1986], 1870: [1986], 1873: [1986], 1875: [1986], 1876: [1986], 1987: [1986, 2004], 1988: [1986], 1991: [1986], 1993: [1986], 1996: [1986], 1997: [1986], 1999: [1986], 2001: [1986, 2002, 2003], 2002: [1986, 2001], 2003: [1986, 2001], 2004: [1986, 1987], 2005: [1986], 2006: [1986], 2007: [1986], 2008: [1986]}
Node to Label Mapping : 
Node 2: Label 4| Node 899: Label 3| Node 391: Label 2| Node 519: Label 1| Node 1166: Label 3| Node 1812: Label 3| Node 1558: Label 3| Node 151: Label 4| Node 792: Label 3| Node 1434: Label 3| Node 1989: Label 2| Node 1990: Label 2| Node 160: Label 3| Node 673: Label 3| Node 1697: Label 3| Node 1574: Label 3| Node 1992: Label 3| Node 1704: Label 3| Node 681: Label 3| Node 45: Label 3| Node 1453: Label 3| Node 1709: Label 2| Node 1994: Label 3| Node 179: Label 3| Node 566: Label 3| Node 1995: Label 3| Node 1986: Label 3| Node 1859: Label 3| Node 68: Label 2| Node 1987: Label 3| Node 1988: Label 3| Node 71: Label ?| Node 201: Label 3| Node 968: Label 1| Node 1095: Label 3| Node 1996: Label 3| Node 460: Label 1| Node 1870: Label 3| Node 335: Label 3| Node 1991: Label 1| Node 1873: Label 3| Node 1993: Label 3| Node 1875: Label 3| Node 1876: Label 3| Node 1997: Label 3| Node 1998: Label 5| Node 215: Label 3| Node 1999: Label 3| Node 2000: Label 3| Node 2001: Label 4| Node 2002: Label 4| Node 476: Label 1| Node 2004: Label 3| Node 2003: Label 3| Node 2006: Label 3| Node 2007: Label 3| Node 2008: Label 3| Node 2009: Label 3| Node 743: Label 3| Node 232: Label 3| Node 745: Label 3| Node 1127: Label 3| Node 2005: Label 3| Node 366: Label 3| Node 1149: Label 2| Node 1023: Label 3| ```
        ""","""The node 71 is connected only to node 1986. The label of node 1986 is 3. Therefore, we can predict that the label of node 71 is also 3.

Label of Node = 3"""
1,-1,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1785: [963, 808, 109, 1624, 317], 963: [1785], 808: [1785], 1624: [109, 317, 1785], 109: [1624, 1785], 317: [1624, 1785]}
Node to Label Mapping : 
Node 963: Label 4| Node 808: Label 4| Node 109: Label ?| Node 1624: Label 1| Node 1785: Label 4| Node 317: Label 4| ```
        ""","""The node 109 is connected to nodes 1624 and 1785. Node 1624 has a label 1 and node 1785 has a label 4. Since there is no clear majority label among the connected nodes, the label of node 109 cannot be determined. 

Label of Node = -1"""
2,2,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1433: [1035, 931, 2359], 1035: [1433], 931: [1433], 2359: [1433]}
Node to Label Mapping : 
Node 1035: Label 2| Node 1433: Label 2| Node 931: Label 2| Node 2359: Label ?| ```
        ""","""Label of Node = 2"""
4,4,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2631: [66], 66: [2631]}
Node to Label Mapping : 
Node 66: Label 4| Node 2631: Label ?| ```
        ""","""Label of Node = 4"""
3,3,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {455: [1664, 2147], 1664: [455, 607, 785, 2147], 607: [1664], 785: [1664], 2147: [1664, 455]}
Node to Label Mapping : 
Node 1664: Label 3| Node 2147: Label 3| Node 455: Label 3| Node 785: Label ?| Node 607: Label 3| ```
        ""","""Label of Node = 3"""
5,5,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2285: [451, 2284, 989, 2286], 451: [2285], 2284: [2285], 989: [2285], 2286: [2285]}
Node to Label Mapping : 
Node 451: Label ?| Node 2284: Label 5| Node 2285: Label 5| Node 2286: Label 5| Node 989: Label 0| ```
        ""","""Label of Node = 5"""
0,6,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2394: [1027, 504, 600, 1420, 1421, 2397, 724, 1396, 1174, 471, 88, 2228, 1085, 1399, 2395, 2396], 1027: [2394], 504: [2394, 2396], 2396: [504, 1420, 2394], 600: [2394], 1421: [1420, 1085, 1396, 2394], 1420: [1421, 2394, 2396], 1085: [1421, 2394], 1396: [1421, 1399, 2228, 2394, 2395], 2397: [2394], 724: [2394, 2395], 2395: [724, 1396, 2228, 2394], 1399: [1396, 2394], 2228: [1396, 2394, 2395], 88: [1174, 2394], 1174: [88, 2394], 471: [2394]}
Node to Label Mapping : 
Node 1027: Label 6| Node 504: Label 6| Node 600: Label 6| Node 1420: Label 6| Node 1421: Label 6| Node 2397: Label 6| Node 724: Label 6| Node 1396: Label 6| Node 1174: Label 0| Node 471: Label 6| Node 88: Label ?| Node 2228: Label 6| Node 2394: Label 6| Node 2395: Label 6| Node 2396: Label 6| Node 1085: Label 6| Node 1399: Label 6| ```
        ""","""The node 88 is connected to nodes 1174 and 2394. The labels of these nodes are 0 and 6 respectively. Since the majority of the labels of the connected nodes is 6, we can predict the label of node 88 as 6.

Label of Node = 6"""
4,-1,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {429: [523], 523: [429, 949, 2406], 949: [523], 2406: [523]}
Node to Label Mapping : 
Node 523: Label 4| Node 949: Label ?| Node 2406: Label 3| Node 429: Label 4| ```
        ""","""Label of Node = -1"""
3,3,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1810: [13, 1808, 1809, 27, 224, 230, 351, 481, 482, 511, 549, 568, 576, 716, 719, 790, 795, 835, 962, 1004, 1062, 1095, 1107, 1121, 1299, 1331, 1348, 1576, 1581, 1787, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1869], 13: [1810], 962: [1808, 1809, 1810, 1062], 1808: [962, 1810], 1809: [962, 1810], 27: [1810], 224: [1810], 230: [1810, 549, 1095], 351: [1810], 481: [1810], 482: [1810, 1812, 790, 1814], 511: [1810, 549], 549: [1810, 230, 511], 568: [1810], 576: [1810], 716: [1810, 1821], 719: [1810], 790: [1810, 482], 795: [1810], 835: [1810, 1121], 1004: [1810], 1062: [1810, 962], 1095: [1810, 230], 1107: [1810], 1121: [1810, 835], 1299: [1810], 1331: [1810, 1576], 1348: [1810], 1576: [1810, 1331], 1581: [1810, 1819], 1787: [1810], 1811: [1810, 1822], 1812: [1810, 482], 1813: [1810], 1814: [1810, 482], 1815: [1810], 1816: [1810], 1817: [1810], 1818: [1810], 1819: [1810, 1581], 1820: [1810], 1821: [1810, 716], 1822: [1810, 1811], 1823: [1810], 1869: [1810]}
Node to Label Mapping : 
Node 13: Label 3| Node 1808: Label 3| Node 1809: Label 3| Node 1810: Label 3| Node 1299: Label 3| Node 1811: Label 3| Node 1812: Label 3| Node 790: Label 3| Node 1813: Label 3| Node 1814: Label 3| Node 1815: Label 3| Node 1816: Label 3| Node 795: Label 3| Node 27: Label 3| Node 1821: Label 3| Node 1817: Label 3| Node 1818: Label 3| Node 1819: Label 3| Node 1820: Label 3| Node 1822: Label 3| Node 1823: Label 3| Node 549: Label 3| Node 1062: Label 3| Node 1576: Label 3| Node 1581: Label 3| Node 1331: Label 3| Node 568: Label 3| Node 576: Label 3| Node 962: Label 3| Node 835: Label 3| Node 1348: Label 3| Node 1095: Label 3| Node 716: Label 3| Node 1869: Label 3| Node 719: Label 1| Node 1107: Label 3| Node 351: Label 3| Node 224: Label 4| Node 481: Label 2| Node 482: Label 3| Node 1121: Label 3| Node 230: Label 3| Node 1004: Label 3| Node 1787: Label 1| Node 511: Label ?| ```
        ""","""Label of Node = 3"""
0,0.,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1416: [1921, 1922, 1923, 1924, 1925, 6, 1926, 30, 61, 74, 149, 305, 572, 718, 1008, 1118, 1468, 1602], 1921: [1416], 1922: [1416, 1008], 1008: [1922, 1416], 1923: [1416], 1924: [1416], 1925: [1416], 6: [1416, 1602], 1602: [6, 1416], 1926: [1416], 30: [1416], 61: [1416], 74: [1416, 1118], 149: [1416], 305: [1416], 572: [1416], 718: [1416], 1118: [1416, 74], 1468: [1416]}
Node to Label Mapping : 
Node 1921: Label 0| Node 1922: Label 0| Node 1923: Label 0| Node 1924: Label 3| Node 1925: Label 0| Node 6: Label 0| Node 1926: Label 0| Node 1416: Label 0| Node 149: Label ?| Node 30: Label 3| Node 305: Label 0| Node 1468: Label 0| Node 572: Label 0| Node 61: Label 0| Node 1602: Label 0| Node 74: Label 0| Node 718: Label 0| Node 1118: Label 0| Node 1008: Label 0| ```
        ""","""The node 149 is connected only to node 1416. The label of node 1416 is 0. Since we don't have any other information, we can assume that the label of node 149 is also 0. So, the Label of Node = 0."""
4,4,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {245: [1162, 782], 1162: [245], 782: [245]}
Node to Label Mapping : 
Node 1162: Label 4| Node 245: Label 4| Node 782: Label ?| ```
        ""","""Label of Node = 4"""
5,5,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {541: [647, 904, 1896, 107, 1360, 1022], 647: [541, 904, 1360], 904: [647, 541, 1360], 1360: [647, 904, 541, 1650], 1896: [541], 107: [541, 971, 1113, 1650], 971: [107, 1650], 1113: [107, 1650], 1650: [107, 971, 1360, 1113], 1022: [541]}
Node to Label Mapping : 
Node 647: Label 5| Node 904: Label 5| Node 1896: Label 5| Node 107: Label ?| Node 971: Label 5| Node 1360: Label 5| Node 1650: Label 5| Node 1113: Label 5| Node 541: Label 5| Node 1022: Label 5| ```
        ""","""Label of Node = 5"""
3,3,"""
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood"" and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {171: [775, 1548, 790], 775: [171, 180, 2075], 180: [775, 1807, 790, 791, 2076, 158, 159, 1020, 2004, 2037], 2075: [775, 14, 1020, 2076, 2077, 2667], 1548: [171, 790], 790: [1548, 171, 180], 158: [14, 180], 14: [158, 2075, 2077], 2077: [14, 2075, 2076, 1020], 1807: [180], 791: [180], 1020: [2075, 2077, 180, 2667], 2076: [2075, 180, 2077, 2667], 2667: [2075, 2076, 1020], 159: [180], 2004: [180], 2037: [180]}
Node to Label Mapping : 
Node 775: Label ?| Node 1548: Label 3| Node 14: Label 3| Node 1807: Label 3| Node 790: Label 3| Node 791: Label 3| Node 2075: Label 3| Node 2076: Label 3| Node 2077: Label 3| Node 158: Label 3| Node 159: Label 3| Node 171: Label 3| Node 180: Label 3| Node 2004: Label 3| Node 2667: Label 3| Node 2037: Label 3| Node 1020: Label 3| ```
        ""","""Label of Node = 3"""
