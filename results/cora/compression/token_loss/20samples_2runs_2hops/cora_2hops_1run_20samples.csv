GroundTruth,Parsed Value,Prompt,Response
3,3,"""""Task:NodeLblPred(?). AdjList:{1457:[1456,649,1019],1456:[1457],649:[1457],1019:[1457]}. NodeLblMap:1456:3,1457:3,649:3,1019:?. RespFmt:Label of Node=<predLbl> or -1 if undetermined""""","""Label of Node=3"""
6,-1,"""Task: NodeLblPred (Predict ? node label, given adjacency list & node-label mapping. Response: ""Label of Node = <predicted label>"". If undetermined, return ""Label of Node = -1"") 
```AdjList: {581: [1792, 306, 118, 454, 1616, 1623], 1792: [581, 2485], 2485: [1792, 2050, 1851], 1616: [2050, 539, 412, 56, 1849, 447, 581, 118, 1402], 2050: [1616, 2485], 118: [1538, 388, 1029, 1690, 554, 1851, 446, 1343, 2112, 581, 454, 842, 1616, 2010, 1507, 2030, 2165, 255, 2166], 1538: [118], 388: [118], 1029: [118, 2166], 2166: [1029, 118], 1402: [1163, 1972, 1919, 1482, 1616], 1163: [1402], 1690: [118, 2112], 2112: [1690, 118, 255, 711, 2030], 711: [539, 2112], 539: [711, 1616, 2155], 2155: [539], 56: [412, 447, 1616, 1849], 412: [56, 1616, 1849], 1849: [412, 1914, 56, 447, 1013, 1487, 1616], 1914: [1849, 1919], 1919: [1914, 1402], 554: [118, 306], 306: [554, 581], 1972: [1402], 1851: [2485, 118, 1013], 447: [56, 1849, 1616, 2638], 1013: [1849, 1851], 1487: [1849], 446: [118, 1507], 1507: [446, 1343, 118], 1343: [118, 255, 1507, 2165], 255: [1343, 2112, 118], 2165: [1343, 118], 2638: [447], 2030: [2112, 118], 454: [581, 118], 1623: [581], 842: [118], 1482: [1402], 2010: [118]}
NodeLblMap: 
Node 1792: Label 3| Node 2050: Label 6| Node 1538: Label 5| Node 388: Label 5| Node 1029: Label 5| Node 1163: Label 6| Node 1690: Label 5| Node 539: Label 6| Node 412: Label ?| Node 1914: Label 6| Node 554: Label 3| Node 306: Label 1| Node 1972: Label 6| Node 2485: Label 5| Node 1919: Label 6| Node 56: Label 6| Node 1849: Label 6| Node 1851: Label 6| Node 446: Label 0| Node 1343: Label 4| Node 447: Label 6| Node 2112: Label 6| Node 581: Label 1| Node 454: Label 5| Node 711: Label 0| Node 842: Label 0| Node 1482: Label 6| Node 2638: Label 6| Node 1487: Label 6| Node 1616: Label 6| Node 1623: Label 1| Node 2010: Label 0| Node 1507: Label 0| Node 2155: Label 0| Node 2030: Label 6| Node 2165: Label 6| Node 118: Label 6| Node 2166: Label 5| Node 1013: Label 0| Node 1402: Label 6| Node 255: Label 4| ```""","""Label of Node = -1"""
5,5,"""""Task:NodeLblPred(?). AdjList:{540:[1441,67,747,113,2527],1441:[540],67:[540],113:[747,540],747:[113,540],2527:[540]}. NodeLblMap:1441:5,67:5,747:5,113:5,540:?,2527:5. RespFmt:Label of Node=<predLbl> or -1 if undetermined.""""","""Label of Node=5"""
3,3,"""Task: NLP (Predict ? label, given adjacency list & node-label map. Response: ""Label of Node = <predicted label>"". If undetermined, return ""-1"") 
```Adjacency list: {1554: [2688, 1657, 2686, 2687], 2688: [1554, 1657, 2687], 1657: [2688, 1554, 2686], 2687: [2688, 1554], 2686: [1554, 1657]}
Node-Label Map: 
2688:3| 1554:3| 1657:?| 2686:3| 2687:3|```""","""Label of Node = 3"""
4,L4,"""<<<
Tsk: NodeLblPrdctn (Prdct lbl of node ?, given adjncy list info as dict ""node:node nghbrhd"" & node-lbl map in ```txt. Rspns: ""Lbl of Node = <prdctd lbl>"". If undtrmnd, return ""Lbl of Node = -1"") 
```Adj list: {332: [2, 665, 2615, 2122, 2003], 2: [332], 665: [397, 332, 576, 2120, 2122], 397: [665], 33: [911, 1051, 2040, 2120, 2121], 911: [33, 893, 1051], 893: [911, 1051, 2383], 1051: [911, 33, 442, 893, 2122, 2383], 2066: [2065, 1098, 1477, 2122], 2065: [2066], 1098: [2066, 1477], 1477: [2066, 1098], 2122: [2066, 665, 1051, 196, 2121, 91, 332, 627, 2040, 2123], 91: [1046, 2122, 2123, 330, 2380, 2001], 1046: [91], 576: [665], 2120: [665, 33, 442, 2040], 442: [1051, 196, 627, 2120], 2383: [1051, 893], 627: [2335, 442, 2238, 2122], 2335: [627, 2001], 2001: [2335, 429, 2121, 2123, 2380, 91, 2003], 2040: [33, 2120, 2122, 2034], 2121: [33, 2001, 2122], 196: [429, 442, 2122], 429: [196, 2001], 2615: [332], 2238: [627], 2123: [2122, 91, 330, 2001, 2003, 2380], 330: [2123, 91], 2003: [2123, 332, 2001], 2380: [2123, 91, 2001], 2034: [2040]}
Node2LblMap : 
N2:L4| N397:L3| N911:L4| N2065:L3| N2066:L3| N1046:L4| N665:L4| N1051:L4| N2335:L4| N33:L4| N429:L4| N2615:L4| N442:L4| N2238:L4| N576:L3| N196:L4| N1477:L3| N2120:L4| N2121:L4| N2122:L4| N2123:L4| N332:L3| N330:L4| N2380:L4| N2383:L?| N1098:L3| N2001:L4| N2003:L3| N91:L4| N2034:L4| N627:L4| N2040:L4| N893:L4| ```
>>>
""","""Lbl of Node = L4"""
3,-1,"""""Task:NodeLblPred(?).AdjList:{681:[1986,1445,1446,1171],1986:[681],1445:[681,1446],1446:[1445,681],1171:[681]}.NodeLblMap:1986:3,1445:3,1446:3,681:?,1171:3.RespFmt:Label of Node=<predLbl> or -1 if undetermined""""","""The label of node 681 cannot be determined as it is connected to nodes with the same label (3). Therefore, the response is -1."""
5,-1,"""""Task:NodeLblPred. AdjList:{2270:[128,1414,20,2375,1354,2269],128:[2270],371:[1414,1415,1553,1441,2375,1354,720],1414:[371,1415,2270],1415:[1414,371,2269],2269:[1415,20,2270],1354:[400,1183,371,2270],400:[1354],1553:[371],20:[2269,2270,2375],2375:[20,371,2270],472:[1182,1183,1825],1182:[472,1183,1579],1183:[1182,472,1354,1579,1824,1825],1579:[1182,1183],1824:[1183,1825],1825:[1183,1824,472],1441:[371,720],720:[1441,371]}. NodeLblMap:128:5,1414:5,1415:5,400:5,1553:5,20:5,1182:5,1183:5,1824:5,1441:?,1825:5,1579:5,2375:5,1354:5,720:5,472:5,2269:5,2270:5,371:5. If ?=undetermined, return -1.""""","""-1"""
4,4,"""""Task:NodeLblPred. AdjList:{63:[1322],1322:[63,2265],2265:[1322,1324,984],2035:[1324],1324:[2035,2265],984:[1068,543,2265],1068:[984],543:[984]}. NodeLblMap:1322:4,1324:5,1068:4,2035:3,984:?,2265:4,63:4,543:0. RespFmt:Label of Node=<predLbl> or -1 if undetermined.""""","""Label of Node=4"""
4,4,"""""Task:NodeLblPred. AdjList:{2001:[1986,2121,2378,2123,2348,429,2379,2380,2381,91,503,574,2002,2003,2044,2335],1986:[2001,2002,2003],2002:[1986,2379,2001],2003:[1986,2123,2001],2121:[2001],1018:[2378],2378:[1018,2001],91:[2123,2380,2001],2123:[91,2001,2003,2380],2380:[2123,91,2001],2348:[2001],429:[2001,2044],2044:[429,2001],2379:[2001,2002],2381:[2001],503:[2001],574:[2001],2335:[2001]}. NodeLblMap:1986:3,2121:4,2378:4,2123:4,2348:3,429:4,2379:4,2380:4,2381:3,2001:4,2002:4,2003:3,503:3,1018:4,91:?,2044:3,574:3,2335:4. RespFmt:Label of Node = <predicted label> or -1""""","""Label of Node 91 = 4"""
2,2,"""""Task:NodeLblPred. AdjList:{4:[2176,1761,1016,1256,2175],2176:[4,595,982,1016,1091,1256,1382,2175],595:[2176,1256,1016],982:[2176,1091,1256,1458,2175],1016:[2176,4,1256,595],1091:[2176,982,1256],1256:[2176,1761,1091,4,595,982,1016,2175],1382:[2176],2175:[2176,1761,4,1256,982],1761:[4,223,1205,1256,1358,1721,2175],223:[1761],1205:[1761,1358],1358:[1761,1205,1721],1721:[1761,1358],1458:[982]}. NodeLblMap:2176:3,1761:2,223:?,1091:3,4:3,1382:3,1256:3,1358:2,1458:3,595:3,1205:2,982:3,1016:3,1721:2,2175:2. RespFmt:Label of Node = <predicted label> or -1 if undetermined.""""","""Label of Node 223 = 2"""
2,-1,"""""Task:NodeLblPred. AdjList:{425:[2466],2466:[425,533,1007,1758,2279],533:[2466,1742],1007:[2466,1154,1742,526],1758:[2466,580,1742,464,1358,860],2279:[2466,110,565],1154:[1007,1358,1742],1358:[1154,580,1742,1758],1742:[1154,580,526,533,1007,1358,1758],580:[1358,1742,1758],110:[2279],565:[2279,526],526:[1742,1007,565],464:[1758],860:[1758]}. NodeLblMap:2466:2,1154:2,580:2,2279:2,425:2,1742:2,1007:2,526:2,464:2,1358:2,110:?,533:2,565:2,860:2,1758:2. If ?=undetermined, return -1""""","""-1"""
5,5,"""""Task:NodeLblPred. AdjList:{1553:[1408,1409,1827,371],1408:[1553,1826,1828,1829],1826:[1408,1409,264,448,645,1824,1827,1829],1828:[1408,1409,1827,238],1829:[1408,1826],360:[1409,1824],1409:[360,1553,1826,1827,1828],1827:[1409,1826,1553,1828],264:[1826],448:[1826,1824],645:[1826,1824],1824:[1826,448,645,360],238:[1828],371:[1553]}. NodeLblMap:1408:5,1409:5,1826:5,1827:5,1828:?,448:5,645:5,1824:5,360:5,264:5,1829:5,238:5,1553:5,371:5. RespFmt:Label of Node = <predicted label> or -1""""","""Label of Node 1828 = 5"""
4,4,"""""Task:NodeLblPred. AdjList:{783:[1061,2376,638,893,1143],1061:[783,1196,2376],1196:[1061,1624,943,1367,2300],2376:[1061,783,813,911,1143,1202,1428],813:[2376],911:[2376,893],1143:[2376,783],1202:[2376,1428],1428:[2376,1202],1624:[1196],943:[1196],1367:[1196],2300:[1196],638:[783,893],893:[783,911,638]}. NodeLblMap:1061:4,2376:4,1624:1,1196:4,813:4,783:4,943:4,911:4,1202:4,1428:4,1143:?,1367:1,2300:1,893:4,638:4. RespFmt:Label of Node = <predicted label> or -1 if undetermined.""""","""Label of Node 1143 = 4"""
5,-1,"""""Task:NodeLblPred. AdjList:{2385:[2304,2102,2103,1338,191,995,2152],2304:[2385],88:[2178,1288,1677,1174,1309,415,1741,851,1882,2015],2178:[88,415,1309],415:[2178,1677,1174,1309,88,851],1309:[2178,1288,1677,61,88,415,490,851,995,1338,1625,1741,1882,2015,2102,2103],1288:[88,1309],1677:[88,191,415,1309],191:[1677,2385],1912:[1296,1174,1704,435,2102,2103,1338,1609,995,2404],1296:[1912],1174:[88,415,1912],61:[1309],490:[1309],851:[1309,415,88],995:[1309,2385,1912],1338:[1309,1912,2385],1625:[1309],1741:[1309,88],1882:[1309,88],2015:[1309,88],2102:[1309,1912,2385],2103:[1309,1912,2385],1704:[1912],435:[1912],1609:[1912],2152:[2385],2404:[1912]}. NodeLblMap:2304:3,2178:5,1288:6,1677:5,1296:0,1174:0,1309:5,415:0,1704:3,435:4,2102:5,2103:?,1338:5,61:0,191:5,1609:1,1741:3,2385:4,851:0,88:0,1625:2,1882:5,2015:6,995:5,2404:0,2152:3,490:5,1912:0. If ?=-1, return 'Label of Node = -1' else 'Label of Node = <predicted label>'""""","""'Label of Node = -1'"""
0,?,"""Task: NodeLblPred. AdjList: {779:[778,1224,1370,1914,1919,1973],778:[779,1224,1370,1914,1919],1224:[778,779,1291,682,1583,1587,1975,1848,1851,1341,1732,1222,586,1110,1131,1370,1525,1526,1660,1919,2151,2152,2153,2154,2155,2156],1370:[778,779,2485,1975,1224,1525,1919,2274],1914:[778,779,1676,1675,604,1525,1919],1919:[778,779,1224,1370,1914],1973:[779,1683,666,32,252,490,504,822,1333,1482,1525,1637,1974,1975,1976],1074:[1676,1675,1501],1676:[1074,1501,1675,1914,1975],1501:[1676,1074],1675:[1676,1074,1914],1975:[1676,1421,1973,1224,1370,2109,2110],1085:[1421,2109,2110,2394],1421:[1085,1396,1420,1975,2109,2110,2394],1396:[1421,2109,2394],1420:[1421,2394],2109:[1421,1975,604,1085,1396,2110],2110:[1421,1975,2109,1085],2394:[1421,1420,1085,504,1396],1291:[1224,1660,2154],1660:[1291,1224,2154],2154:[1291,1587,1224,1660],1683:[1973],666:[1973],32:[1973],682:[1224],1583:[1224],1587:[1224,2154],252:[1973,2485],490:[1973,1131],504:[1973,2394],822:[1973],1333:[1973],1482:[1973],1525:[1973,1224,1370,1914],1637:[1973],1974:[1973],1976:[1973],2485:[252,1370,1851],1851:[2485,1224],1848:[1224],1341:[1224],604:[2109,1914],1732:[1224],1222:[1224],586:[1224,2155],1110:[1224],1131:[1224,490,2155],1526:[1224],2151:[1224],2152:[1224],2153:[1224,2155],2155:[1224,586,2153,1131],2156:[1224],2274:[1370]}. NodeLblMap: 778:6,779:6,1676:6,1421:6,1291:6,1420:6,1675:6,1683:6,666:?,32:0,682:6,1583:0,1074:6,1587:6,1973:6,2485:5,1975:6,1848:0,822:5,1333:6,1851:6,1974:5,1341:0,2109:6,2110:6,1085:6,1976:6,1732:2,1222:5,1224:0,586:0,1482:6,1110:0,1370:6,2394:6,604:6,1501:6,2274:0,1637:0,2151:6,2152:3,2153:4,2154:6,1131:3,2155:0,2156:0,490:5,1396:6,1525:6,1526:0,252:5,504:6,1914:6,1660:6,1919:6.""","""The label of node 666 is ?."""
2,2,"""""Task:NodeLblPred(?). AdjList:{449:[1280],1280:[449,2612],2612:[1280,1516],1358:[1516],1516:[1358,2612]}. NodeLblMap:1280:2,449:2,1516:2,1358:?,2612:2. RespFmt:Label of Node=<predLbl> or -1 if undetermined""""","""Label of Node=2"""
4,"The task is to determine the label of node 1795 based on the labels of its neighboring nodes. The labels of all neighboring nodes are 4. Therefore, the label of node 1795 is also 4.","""""Task:NodeLblPred(?,AdjList:{828:[2464,1795],2464:[828,1795],1795:[2464,1794,798,828,1796,2299],798:[1793,1794,1795,1381],1793:[798],1794:[798,1381,1795,1796],1381:[1794,798],1796:[1794,1795,2297],2299:[1795,2297],2297:[1796,2299]},NodeLblMap:2464:4,1793:4,1794:4,1795:?,1796:4,1381:4,2297:4,2299:4,828:4,798:4). If ?=undetermined, return -1""""","""The task is to determine the label of node 1795 based on the labels of its neighboring nodes. The labels of all neighboring nodes are 4. Therefore, the label of node 1795 is also 4."""
0,1,"""Task: NodeLblPred (Predict ? label, given adjacency list & node-label map. Response: ""Label of Node = <predicted label>"". If undetermined, return ""Label of Node = -1"") 
```AdjList: {1357: [2170], 2170: [1357, 2171], 2171: [2170]}
NodeLblMap: 
Node 2170: Label 1| Node 2171: Label ?| Node 1357: Label 0| ```""","""Label of Node = 1"""
5,5,"""""Task:NodeLblPred. AdjList:{360:[1824,1409],1824:[360,448,645,1826],448:[1824,1826],645:[1824,1826],1826:[1824,1409,264,448,645,1408,1827,1829],1409:[360,1553,1826,1827,1828],1553:[1409,1827,1408,371],1827:[1409,1826,1553,1828],1828:[1409,1827,238,1408],264:[1826],1408:[1826,1828,1553,1829],1829:[1826,1408],238:[1828],371:[1553]}. NodeLblMap:1824:5,1409:5,1826:5,1827:5,1828:5,1408:5,448:5,645:5,360:5,264:?,1829:5,238:5,1553:5,371:5. ResFmt:Label of Node=<predLbl> or -1""""","""Label of Node=5"""
0,-1,"""Task: NodeLblPred. AdjList: {733:[2304,1160..2302],2304:[733],38:[1160,429,862,863]..2302:[733]}. NodeLblMap: N2304:L3|N1160:L3|N1294:L3|N401:L3|N1682:L0|N1817:L3|N794:L0|N1818:L3|N38:L4|N678:L3|N1062:L3|N1192:L3|N429:L4|N45:L3|N1329:L3|N435:L4|N2303:L3|N2008:L3|N218:L3|N2011:L3|N2268:L0|N733:L0|N94:L0|N862:L4|N863:L?|N1265:L4|N2035:L3|N2291:L0|N759:L4|N377:L3|N2301:L3|N2302:L3|N383:L3. ResFmt: ""Label of Node = <predicted label>"". If undetermined, return ""Label of Node = -1"".""","""Label of Node = -1"""
