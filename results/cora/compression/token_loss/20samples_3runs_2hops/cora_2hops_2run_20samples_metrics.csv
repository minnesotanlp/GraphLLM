Input Text,Compressed Text,Token Compression Percentage,Connection Info Compression Percentage
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {89: [258, 1157, 2463, 1094, 884, 1530], 258: [89, 963, 1094, 1240, 2645], 963: [258, 2434, 1157, 1417, 29, 1443, 805, 1703, 43, 2240, 706, 203, 375, 1094, 1141, 1785, 2399, 2400, 2401], 1094: [258, 1443, 963, 89, 1369], 1240: [258, 1443, 1702, 2237, 706], 2645: [258, 29, 1443, 706], 375: [2434, 963, 2401], 2434: [375, 963, 2399, 2401], 2399: [2434, 1443, 43, 2240, 963], 2401: [2434, 963, 375], 1157: [89, 963, 2240, 2463], 2240: [1157, 152, 1443, 2238, 963, 1530, 2399], 2463: [1157, 89], 1417: [963, 1703], 1703: [1417, 22, 1702, 963, 1969, 2238], 1702: [22, 1240, 1703, 2238], 22: [1702, 1703, 2238], 2238: [22, 151, 152, 1702, 1703, 1969, 2237, 627, 706, 2239, 2240], 151: [2238], 43: [152, 963, 1530, 2399, 2400], 152: [43, 884, 2238, 2240], 884: [152, 89], 29: [963, 2645], 1530: [2464, 43, 2240, 89, 1369], 2464: [1530], 761: [1443], 1443: [761, 963, 1094, 1240, 1350, 2240, 2399, 2645], 1350: [1443], 706: [805, 2238, 963, 1240, 2645], 805: [706, 963], 1969: [1703, 2238], 2400: [43, 963], 2237: [1240, 2238], 627: [2238], 2239: [2238], 203: [963], 1141: [963], 1785: [963], 1369: [1094, 1530]}
Node to Label Mapping : 
Node 258: Label 4| Node 2434: Label 4| Node 1157: Label 4| Node 1417: Label 4| Node 22: Label 4| Node 151: Label 4| Node 152: Label 4| Node 29: Label 4| Node 2463: Label 4| Node 2464: Label 4| Node 1443: Label 4| Node 805: Label 4| Node 1702: Label 4| Node 1703: Label 4| Node 43: Label 4| Node 1969: Label ?| Node 2237: Label 4| Node 2238: Label 4| Node 2239: Label 4| Node 2240: Label 4| Node 706: Label 4| Node 963: Label 4| Node 1094: Label 4| Node 1350: Label 4| Node 203: Label 4| Node 2645: Label 4| Node 1240: Label 4| Node 89: Label 4| Node 1369: Label 4| Node 2399: Label 4| Node 2400: Label 4| Node 2401: Label 4| Node 627: Label 4| Node 884: Label 4| Node 1141: Label 4| Node 761: Label 4| Node 375: Label 4| Node 1785: Label 4| Node 1530: Label 4| ```
        >>>
        ","""NodeLblPred: AdjList={89:[258,1157,2463,1094,884,1530],258:[89,963,1094,1240,2645],963:[258,2434,1157,1417,29,1443,805,1703,43,2240,706,203,375,1094,1141,1785,2399,2400,2401],1094:[258,1443,963,89,1369],1240:[258,1443,1702,2237,706],2645:[258,29,1443,706],375:[2434,963,2401],2434:[375,963,2399,2401],2399:[2434,1443,43,2240,963],2401:[2434,963,375],1157:[89,963,2240,2463],2240:[1157,152,1443,2238,963,1530,2399],2463:[1157,89],1417:[963,1703],1703:[1417,22,1702,963,1969,2238],1702:[22,1240,1703,2238],22:[1702,1703,2238],2238:[22,151,152,1702,1703,1969,2237,627,706,2239,2240],151:[2238],43:[152,963,1530,2399,2400],152:[43,884,2238,2240],884:[152,89],29:[963,2645],1530:[2464,43,2240,89,1369],2464:[1530],761:[1443],1443:[761,963,1094,1240,1350,2240,2399,2645],1350:[1443],706:[805,2238,963,1240,2645],805:[706,963],1969:[1703,2238],2400:[43,963],2237:[1240,2238],627:[2238],2239:[2238],203:[963],1141:[963],1785:[963],1369:[1094,1530]} NodeLblMap={258:4,2434:4,1157:4,1417:4,22:4,151:4,152:4,29:4,2463:4,2464:4,1443:4,805:4,1702:4,1703:4,43:4,1969:'?',2237:4,2238:4,2239:4,2240:4,706:4,963:4,1094:4,1350:4,203:4,2645:4,1240:4,89:4,1369:4,2399:4,2400:4,2401:4,627:4,884:4,1141:4,761:4,375:4,1785:4,1530:4}""",54.6408393866021,-1
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {826: [2528, 610, 490, 2287], 2528: [826], 109: [610], 610: [109, 114, 234, 826, 2287, 2288, 2481], 114: [610, 2288], 234: [610], 2287: [610, 826, 2288], 2288: [610, 2287, 114], 2481: [610], 490: [826]}
Node to Label Mapping : 
Node 2528: Label 5| Node 610: Label 5| Node 234: Label 1| Node 490: Label 5| Node 109: Label 1| Node 2287: Label 5| Node 2288: Label 5| Node 2481: Label ?| Node 114: Label 5| Node 826: Label 5| ```
        >>>
        ","""Task:NodeLblPred. ?Node, given adjList & nodeLblMap. RespFmt: 'Label of Node = <predLbl>'. If undetermined, return '-1'. ```AdjList: {826:[2528,610,490,2287],2528:[826],109:[610],610:[109,114,234,826,2287,2288,2481],114:[610,2288],234:[610],2287:[610,826,2288],2288:[610,2287,114],2481:[610],490:[826]} NodeLblMap: 2528:5|610:5|234:1|490:5|109:1|2287:5|2288:5|2481:?|114:5|826:5|```""",40.42056074766355,70.79646017699115
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {379: [132, 904, 1959, 1022], 132: [379, 904, 1022, 1959], 904: [132, 647, 379, 541, 1312, 1360, 1959], 1022: [132, 541, 379], 1959: [132, 904, 379], 1267: [645, 647, 1824], 645: [1267, 1824], 1824: [645, 1267], 468: [647, 1311, 1313], 647: [468, 541, 904, 1267, 1360], 541: [647, 904, 107, 1022, 1360, 1896], 1360: [647, 904, 541, 1960, 2491, 1650, 1902, 1904], 1312: [904, 1311, 1313], 107: [541, 1650], 1896: [541], 1311: [468, 1312, 1313], 1313: [1311, 1312, 468], 1960: [1360, 1904, 2491], 1904: [1960, 1360, 1902], 2491: [1960, 1360], 1650: [1360, 107], 1902: [1360, 1904]}
Node to Label Mapping : 
Node 132: Label 5| Node 645: Label 5| Node 647: Label 5| Node 904: Label 5| Node 541: Label 5| Node 1311: Label 5| Node 1312: Label 5| Node 1313: Label 5| Node 1824: Label 5| Node 1959: Label 5| Node 1960: Label 5| Node 2491: Label 5| Node 1360: Label 5| Node 468: Label 5| Node 1896: Label 5| Node 107: Label 5| Node 1902: Label 5| Node 1904: Label 5| Node 1650: Label 5| Node 1267: Label ?| Node 379: Label 5| Node 1022: Label 5| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{379:[132,904,1959,1022],132:[379,904,1022,1959],904:[132,647,379,541,1312,1360,1959],1022:[132,541,379],1959:[132,904,379],1267:[645,647,1824],645:[1267,1824],1824:[645,1267],468:[647,1311,1313],647:[468,541,904,1267,1360],541:[647,904,107,1022,1360,1896],1360:[647,904,541,1960,2491,1650,1902,1904],1312:[904,1311,1313],107:[541,1650],1896:[541],1311:[468,1312,1313],1313:[1311,1312,468],1960:[1360,1904,2491],1904:[1960,1360,1902],2491:[1960,1360],1650:[1360,107],1902:[1360,1904]}. NodeLblMap:132,645,647,904,541,1311,1312,1313,1824,1959,1960,2491,1360,468,1896,107,1902,1904,1650,379,1022=5,1267=?.""",42.33289646133683,72.22222222222221
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {963: [258, 2434, 1157, 1417, 29, 1443, 805, 1703, 43, 2240, 706, 203, 375, 1094, 1141, 1785, 2399, 2400, 2401], 258: [963, 1094, 2645], 1094: [258, 1443, 963], 2645: [258, 29, 1443, 706], 375: [2434, 963, 2401], 2434: [375, 963, 2399, 2401], 2399: [2434, 1443, 43, 2240, 963], 2401: [2434, 963, 375], 1157: [963, 2240], 2240: [1157, 1443, 963, 2399], 1417: [963, 1703], 1703: [1417, 963], 29: [963, 2645], 1443: [963, 1094, 2240, 2399, 2645], 706: [805, 963, 2645], 805: [706, 963], 43: [963, 2399, 2400], 2400: [43, 963], 203: [963], 1141: [963], 1785: [963]}
Node to Label Mapping : 
Node 258: Label 4| Node 2434: Label 4| Node 1157: Label 4| Node 1417: Label 4| Node 29: Label 4| Node 1443: Label 4| Node 805: Label 4| Node 1703: Label 4| Node 43: Label 4| Node 2240: Label 4| Node 706: Label 4| Node 963: Label 4| Node 1094: Label ?| Node 203: Label 4| Node 2645: Label 4| Node 2399: Label 4| Node 2400: Label 4| Node 2401: Label 4| Node 1141: Label 4| Node 375: Label 4| Node 1785: Label 4| ```
        >>>
        ","""NodeLblPred: AdjList={963:[258,2434,1157,1417,29,1443,805,1703,43,2240,706,203,375,1094,1141,1785,2399,2400,2401],258:[963,1094,2645],1094:[258,1443,963],2645:[258,29,1443,706],375:[2434,963,2401],2434:[375,963,2399,2401],2399:[2434,1443,43,2240,963],2401:[2434,963,375],1157:[963,2240],2240:[1157,1443,963,2399],1417:[963,1703],1703:[1417,963],29:[963,2645],1443:[963,1094,2240,2399,2645],706:[805,963,2645],805:[706,963],43:[963,2399,2400],2400:[43,963],203:[963],1141:[963],1785:[963]}, NodeLblMap={258:4,2434:4,1157:4,1417:4,29:4,1443:4,805:4,1703:4,43:4,2240:4,706:4,963:4,1094:'?',203:4,2645:4,2399:4,2400:4,2401:4,1141:4,375:4,1785:4}""",46.72021419009371,-1
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {755: [1898, 1277, 2071], 1898: [755], 1277: [755], 2071: [755]}
Node to Label Mapping : 
Node 1898: Label ?| Node 755: Label 5| Node 1277: Label 3| Node 2071: Label 2| ```
        >>>
        ","""Task: Node Label Pred. (Predict ? node label, given adjacency list & node-label mapping. Response: ""Label of Node = <predicted label>"". If undetermined, return ""-1"") 
```Adjacency list: {755: [1898, 1277, 2071], 1898: [755], 1277: [755], 2071: [755]}
Node-Label Mapping : 
Node 1898: Label ?| Node 755: Label 5| Node 1277: Label 3| Node 2071: Label 2| ```""",41.19601328903654,100.0
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {1563: [2633], 2633: [1563]}
Node to Label Mapping : 
Node 2633: Label ?| Node 1563: Label 3| ```
        >>>
        ","NLPred:AdjList={1563:[2633],2633:[1563]},NodeLblMap={2633:'?',1563:3},RespFmt=""Label of Node = <predicted label>"",UndetLbl=""Label of Node = -1""",20.454545454545457,-1
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {641: [2704], 2704: [641]}
Node to Label Mapping : 
Node 2704: Label ?| Node 641: Label 3| ```
        >>>
        ","Task: NodeLblPred. AdjList: {641: [2704], 2704: [641]}. NodeLblMap: 2704: ?| 641: 3. RespFmt: ""Label of Node = <predLbl>"". If undetermined, ""Label of Node = -1"".",24.521072796934863,100.0
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {998: [1284, 976, 978, 1103, 1431, 2365], 1284: [998, 1103], 1103: [1284, 998], 976: [998, 1431], 978: [998], 1431: [998, 976], 2365: [998]}
Node to Label Mapping : 
Node 1284: Label 2| Node 998: Label ?| Node 1103: Label 2| Node 976: Label 2| Node 978: Label 2| Node 1431: Label 2| Node 2365: Label 2| ```
        >>>
        ","Task:NodeLblPred(AdjList:{998:[1284,976,978,1103,1431,2365],1284:[998,1103],1103:[1284,998],976:[998,1431],978:[998],1431:[998,976],2365:[998]},NodeLblMap:1284:2,998:?,1103:2,976:2,978:2,1431:2,2365:2)",27.297297297297295,72.15189873417721
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2394: [1027, 1420, 1421, 1174, 2228, 1085, 724, 471, 600, 88, 504, 1396, 1399, 2395, 2396, 2397], 1027: [2394], 1421: [1420, 1085, 1396, 1975, 2109, 2110, 2394], 1420: [1421, 2394, 2396], 2396: [1420, 2394, 504], 1085: [1421, 2109, 2110, 2394], 1396: [1421, 2228, 2109, 2394, 2395, 1399], 1975: [1421, 2109, 2110], 2109: [1421, 1975, 1085, 604, 1396, 2110], 2110: [1421, 1975, 1085, 2109], 88: [1174, 2394], 1174: [88, 2394], 2228: [1396, 2394, 2395], 2395: [2228, 724, 2394, 1396], 604: [2109], 724: [2394, 2395], 471: [2394], 600: [2394], 504: [2394, 2396], 1399: [2394, 1396], 2397: [2394]}
Node to Label Mapping : 
Node 1027: Label 6| Node 1420: Label 6| Node 1421: Label 6| Node 1174: Label 0| Node 2228: Label 6| Node 1975: Label 6| Node 1085: Label ?| Node 2109: Label 6| Node 2110: Label 6| Node 724: Label 6| Node 471: Label 6| Node 600: Label 6| Node 88: Label 0| Node 2394: Label 6| Node 2395: Label 6| Node 604: Label 6| Node 2396: Label 6| Node 2397: Label 6| Node 1396: Label 6| Node 1399: Label 6| Node 504: Label 6| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{2394:[1027,1420,1421,1174,2228,1085,724,471,600,88,504,1396,1399,2395,2396,2397],1027:[2394],1421:[1420,1085,1396,1975,2109,2110,2394],1420:[1421,2394,2396],2396:[1420,2394,504],1085:[1421,2109,2110,2394],1396:[1421,2228,2109,2394,2395,1399],1975:[1421,2109,2110],2109:[1421,1975,1085,604,1396,2110],2110:[1421,1975,1085,2109],88:[1174,2394],1174:[88,2394],2228:[1396,2394,2395],2395:[2228,724,2394,1396],604:[2109],724:[2394,2395],471:[2394],600:[2394],504:[2394,2396],1399:[2394,1396],2397:[2394]}. NodeLblMap:1027:6,1420:6,1421:6,1174:0,2228:6,1975:6,1085:?,2109:6,2110:6,724:6,471:6,600:6,88:0,2394:6,2395:6,604:6,2396:6,2397:6,1396:6,1399:6,504:6. If ?,-1""",49.87146529562982,74.17582417582418
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2546: [5, 952, 466, 628], 5: [2546], 552: [524, 1169, 1358], 524: [552, 1169, 1358, 2476], 1169: [524, 1040, 111, 188, 301, 439, 552, 628, 689, 748, 823, 853, 1145, 1358, 1714, 1719, 1720, 1731, 1734, 1737, 2220, 2476, 2492], 1358: [524, 1040, 1169, 2597, 552, 687, 689, 1714, 1070, 1072, 1712, 823, 1719, 1720, 59, 1725, 1731, 1734, 1737, 1740, 111, 466, 748, 853, 1145, 1745, 1764], 2476: [524, 1169], 1040: [1169, 1358], 111: [1169, 2492, 1358], 188: [1169], 301: [1169, 2492], 439: [1169], 628: [1169, 1725, 1764, 2546], 689: [1169, 1358], 748: [1169, 1358, 1145], 823: [1169, 1358], 853: [1169, 1358], 1145: [1169, 1358, 748], 1714: [1169, 1358], 1719: [1169, 1358], 1720: [1169, 1358], 1731: [1169, 1358], 1734: [1169, 2597, 1725, 1358], 1737: [1169, 1358], 2220: [1169], 2492: [1169, 301, 111], 1725: [1427, 2334, 2596, 2597, 557, 687, 1070, 1072, 1712, 59, 628, 1358, 1734, 1740, 1745, 2413], 1427: [1725], 2334: [1725], 2596: [1725, 1745], 1745: [2596, 1725, 1358], 2597: [1358, 1725, 1734], 557: [1725], 687: [1358, 1725], 1072: [1070, 1358, 1725, 1740], 1070: [1072, 1358, 1725], 1740: [1072, 1725, 1358], 1712: [1358, 1725], 59: [1358, 1725], 2413: [1725], 952: [2546], 466: [1358, 2546], 1764: [1358, 628]}
Node to Label Mapping : 
Node 5: Label 2| Node 524: Label 2| Node 1040: Label 2| Node 1169: Label 2| Node 1427: Label 2| Node 2334: Label 2| Node 2596: Label 2| Node 2597: Label 2| Node 552: Label 2| Node 2220: Label 2| Node 301: Label 2| Node 2476: Label 2| Node 557: Label 2| Node 687: Label 2| Node 689: Label 2| Node 1714: Label 2| Node 1070: Label 2| Node 1072: Label 2| Node 1712: Label 2| Node 823: Label ?| Node 439: Label 2| Node 1719: Label 2| Node 1720: Label 2| Node 59: Label 2| Node 188: Label 2| Node 1725: Label 2| Node 2492: Label 2| Node 952: Label 3| Node 1731: Label 2| Node 1734: Label 2| Node 1737: Label 2| Node 1740: Label 2| Node 1358: Label 2| Node 1745: Label 2| Node 466: Label 2| Node 853: Label 2| Node 1764: Label 5| Node 748: Label 2| Node 2413: Label 3| Node 111: Label 2| Node 2546: Label 2| Node 628: Label 5| Node 1145: Label 2| ```
        >>>
        ","""NodeLblPred:AdjLst:{2546:[5,952,466,628],5:[2546],552:[524,1169,1358],524:[552,1169,1358,2476],1169:[524,1040,111,188,301,439,552,628,689,748,823,853,1145,1358,1714,1719,1720,1731,1734,1737,2220,2476,2492],1358:[524,1040,1169,2597,552,687,689,1714,1070,1072,1712,823,1719,1720,59,1725,1731,1734,1737,1740,111,466,748,853,1145,1745,1764],2476:[524,1169],1040:[1169,1358],111:[1169,2492,1358],188:[1169],301:[1169,2492],439:[1169],628:[1169,1725,1764,2546],689:[1169,1358],748:[1169,1358,1145],823:[1169,1358],853:[1169,1358],1145:[1169,1358,748],1714:[1169,1358],1719:[1169,1358],1720:[1169,1358],1731:[1169,1358],1734:[1169,2597,1725,1358],1737:[1169,1358],2220:[1169],2492:[1169,301,111],1725:[1427,2334,2596,2597,557,687,1070,1072,1712,59,628,1358,1734,1740,1745,2413],1427:[1725],2334:[1725],2596:[1725,1745],1745:[2596,1725,1358],2597:[1358,1725,1734],557:[1725],687:[1358,1725],1072:[1070,1358,1725,1740],1070:[1072,1358,1725],1740:[1072,1725,1358],1712:[1358,1725],59:[1358,1725],2413:[1725],952:[2546],466:[1358,2546],1764:[1358,628]}NodeLblMap:5:2,524:2,1040:2,1169:2,1427:2,2334:2,2596:2,2597:2,552:2,2220:2,301:2,2476:2,557:2,687:2,689:2,1714:2,1070:2,1072:2,1712:2,823:?,439:2,1719:2,1720:2,59:2,188:2,1725:2,2492:2,952:3,1731:2,1734:2,1737:2,1740:2,1358:2,1745:2,466:2,853:2,1764:5,748:2,2413:3,111:2,2546:2,628:5,1145:2""",56.14296351451973,-1
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {219: [1413, 1542], 1413: [219, 251, 338, 402, 776, 812, 872, 877, 1340, 1542, 1931, 1935, 1936], 251: [1413, 1542, 1300, 812], 338: [1413, 1542], 402: [1413, 1542, 776, 1936, 1940], 776: [1413, 1542, 402], 812: [1413, 1542, 1300, 251], 872: [1413, 1542, 1340], 877: [1413, 1542, 1935, 1300, 1176, 1177], 1340: [1413, 1542, 1943, 872], 1542: [1413, 216, 219, 251, 297, 338, 402, 776, 812, 872, 877, 918, 990, 1176, 1177, 1300, 1301, 1334, 1340, 1477, 1577, 1607, 1931, 1935, 1936, 1939, 1940, 1941, 1942, 1943], 1931: [1413, 1542], 1935: [1413, 1542, 877, 1176, 1177], 1936: [1413, 1542, 402], 216: [1542], 297: [1542], 918: [1542], 990: [1542], 1176: [1542, 1935, 877], 1177: [1542, 1935, 877], 1300: [1542, 251, 812, 877, 1940, 1941], 1301: [1542], 1334: [1542, 1941, 1577], 1477: [1542], 1577: [1542, 1334], 1607: [1542], 1939: [1542], 1940: [1542, 402, 1300], 1941: [1542, 1300, 1334], 1942: [1542], 1943: [1542, 1340]}
Node to Label Mapping : 
Node 1413: Label 3| Node 1542: Label 3| Node 776: Label 4| Node 1931: Label 3| Node 1935: Label 3| Node 1936: Label 3| Node 402: Label 3| Node 1939: Label 3| Node 1300: Label 3| Node 1301: Label 3| Node 918: Label 3| Node 1943: Label 3| Node 1176: Label 3| Node 1177: Label 3| Node 1940: Label 3| Node 1941: Label 3| Node 1942: Label 3| Node 297: Label ?| Node 1577: Label 3| Node 812: Label 3| Node 1334: Label 3| Node 1340: Label 3| Node 1477: Label 3| Node 1607: Label 3| Node 338: Label 3| Node 216: Label 3| Node 219: Label 3| Node 990: Label 3| Node 872: Label 4| Node 877: Label 3| Node 251: Label 3| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{219:[1413,1542],1413:[219,251,338,402,776,812,872,877,1340,1542,1931,1935,1936],251:[1413,1542,1300,812],338:[1413,1542],402:[1413,1542,776,1936,1940],776:[1413,1542,402],812:[1413,1542,1300,251],872:[1413,1542,1340],877:[1413,1542,1935,1300,1176,1177],1340:[1413,1542,1943,872],1542:[1413,216,219,251,297,338,402,776,812,872,877,918,990,1176,1177,1300,1301,1334,1340,1477,1577,1607,1931,1935,1936,1939,1940,1941,1942,1943],1931:[1413,1542],1935:[1413,1542,877,1176,1177],1936:[1413,1542,402],216:[1542],297:[1542],918:[1542],990:[1542],1176:[1542,1935,877],1177:[1542,1935,877],1300:[1542,251,812,877,1940,1941],1301:[1542],1334:[1542,1941,1577],1477:[1542],1577:[1542,1334],1607:[1542],1939:[1542],1940:[1542,402,1300],1941:[1542,1300,1334],1942:[1542],1943:[1542,1340]}. NodeLblMap:1413:3,1542:3,776:4,1931:3,1935:3,1936:3,402:3,1939:3,1300:3,1301:3,918:3,1943:3,1176:3,1177:3,1940:3,1941:3,1942:3,297:?,1577:3,812:3,1334:3,1340:3,1477:3,1607:3,338:3,216:3,219:3,990:3,872:4,877:3,251:3""",53.503787878787875,73.11827956989248
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {793: [2592, 1896, 1902, 1903], 2592: [793, 1903], 1903: [2592, 709, 840, 1897, 1960, 1902, 793, 2269], 1896: [709, 793, 1897], 709: [1896, 1903], 1897: [1896, 1903], 840: [1903], 1960: [1903], 1902: [793, 1903], 2269: [1903]}
Node to Label Mapping : 
Node 2592: Label 5| Node 709: Label 5| Node 1896: Label 5| Node 840: Label 5| Node 1897: Label 5| Node 1960: Label ?| Node 1902: Label 5| Node 1903: Label 5| Node 793: Label 5| Node 2269: Label 5| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{793:[2592,1896,1902,1903],2592:[793,1903],1903:[2592,709,840,1897,1960,1902,793,2269],1896:[709,793,1897],709:[1896,1903],1897:[1896,1903],840:[1903],1960:[1903],1902:[793,1903],2269:[1903]}. NodeLblMap:2592:5,709:5,1896:5,840:5,1897:5,1960:?,1902:5,1903:5,793:5,2269:5. RespFmt:Label of Node = <predicted label> or -1 if undetermined.""",39.24611973392461,73.68421052631578
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {565: [513, 526, 1038, 427, 687, 244, 1361, 1398, 1528, 1610, 1723, 2279], 513: [565, 1528], 1528: [513, 427, 565, 1361, 1398], 110: [1161, 567, 1599, 2279, 1262], 1161: [110], 526: [565, 1007], 1007: [526, 2466], 1038: [565], 2466: [533, 425, 1007, 1758, 2279], 533: [2466], 425: [2466], 1758: [2466], 2279: [2466, 565, 110], 427: [565, 1528], 687: [565, 1610], 1610: [687, 565, 244], 244: [565, 1610], 1361: [565, 1528], 1398: [565, 1528], 1723: [565], 567: [110, 1262], 1262: [567, 110], 1599: [110]}
Node to Label Mapping : 
Node 513: Label 2| Node 1161: Label 2| Node 526: Label 2| Node 1038: Label 2| Node 533: Label 2| Node 2466: Label 2| Node 425: Label 2| Node 427: Label ?| Node 687: Label 2| Node 565: Label 2| Node 567: Label 2| Node 1723: Label 2| Node 1599: Label 2| Node 1610: Label 2| Node 1361: Label 2| Node 1758: Label 2| Node 2279: Label 2| Node 110: Label 2| Node 1262: Label 2| Node 1007: Label 2| Node 244: Label 2| Node 1398: Label 2| Node 1528: Label 2| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{565:[513,526,1038,427,687,244,1361,1398,1528,1610,1723,2279],513:[565,1528],1528:[513,427,565,1361,1398],110:[1161,567,1599,2279,1262],1161:[110],526:[565,1007],1007:[526,2466],1038:[565],2466:[533,425,1007,1758,2279],533:[2466],425:[2466],1758:[2466],2279:[2466,565,110],427:[565,1528],687:[565,1610],1610:[687,565,244],244:[565,1610],1361:[565,1528],1398:[565,1528],1723:[565],567:[110,1262],1262:[567,110],1599:[110]}. NodeLblMap:513:2,1161:2,526:2,1038:2,533:2,2466:2,425:2,427:?,687:2,565:2,567:2,1723:2,1599:2,1610:2,1361:2,1758:2,2279:2,110:2,1262:2,1007:2,244:2,1398:2,1528:2. RespFmt:Label of Node = <predicted label> or -1""",47.63231197771588,71.72413793103448
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {352: [1294, 1944, 310], 1294: [352], 310: [150, 1815, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1581, 1331, 352, 875, 892, 990, 1241, 1272], 150: [310], 1815: [310, 1950], 1950: [1815, 1944, 1946, 1947, 1948, 310, 336, 875, 892, 1054, 1241, 1272, 1334, 1432, 1605], 1944: [310, 336, 352, 1945, 1946, 1950], 336: [1944, 1950], 1945: [1944, 310, 875, 1272, 1946, 1947], 1946: [1944, 1945, 310, 1950], 875: [1945, 1950, 310], 1272: [1945, 1947, 1950, 310], 1947: [1945, 310, 1272, 1950], 1948: [310, 1950], 1949: [310], 892: [1950, 310], 1054: [1950, 990, 1432, 1605], 1241: [1950, 310], 1334: [1950], 1432: [1950, 1054], 1605: [1950, 1054], 990: [1054, 310], 1581: [310], 1331: [310]}
Node to Label Mapping : 
Node 1294: Label 3| Node 150: Label 3| Node 1815: Label 3| Node 1944: Label 3| Node 1945: Label 3| Node 1946: Label 3| Node 1947: Label 3| Node 1948: Label 3| Node 1949: Label 3| Node 1950: Label 3| Node 1054: Label ?| Node 1432: Label 3| Node 1581: Label 3| Node 1331: Label 3| Node 310: Label 3| Node 1334: Label 3| Node 1605: Label 3| Node 336: Label 3| Node 1241: Label 3| Node 990: Label 3| Node 352: Label 3| Node 875: Label 3| Node 1272: Label 3| Node 892: Label 3| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{352:[1294,1944,310],1294:[352],310:[150,1815,1944-50,1581,1331,352,875,892,990,1241,1272],150:[310],1815:[310,1950],1950:[1815,1944,1946-8,310,336,875,892,1054,1241,1272,1334,1432,1605],1944:[310,336,352,1945,1946,1950],336:[1944,1950],1945:[1944,310,875,1272,1946,1947],1946:[1944,1945,310,1950],875:[1945,1950,310],1272:[1945,1947,1950,310],1947:[1945,310,1272,1950],1948:[310,1950],1949:[310],892:[1950,310],1054:[1950,990,1432,1605],1241:[1950,310],1334:[1950],1432:[1950,1054],1605:[1950,1054],990:[1054,310],1581:[310],1331:[310]}. NodeLblMap:1294-150,1815,1944-9,1950,1432,1581,1331,310,1334,1605,336,1241,990,352,875,1272,892:3,1054:?""",41.05882352941176,68.04878048780488
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {148: [714, 378, 381, 602, 2518], 714: [148], 378: [148, 602], 381: [148, 2518], 602: [148, 378], 2518: [148, 381]}
Node to Label Mapping : 
Node 714: Label 4| Node 148: Label 4| Node 602: Label 4| Node 2518: Label 4| Node 378: Label 4| Node 381: Label ?| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{148:[714,378,381,602,2518],714:[148],378:[148,602],381:[148,2518],602:[148,378],2518:[148,381]}. NodeLblMap:714:4,148:4,602:4,2518:4,378:4,381:?. RespFmt:Label of Node = <predLbl> or -1 if undetermined.""",29.239766081871345,69.35483870967742
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {269: [321, 418, 8, 2543, 2551], 321: [269], 418: [269], 8: [269], 2543: [269], 2551: [269]}
Node to Label Mapping : 
Node 321: Label 3| Node 418: Label 3| Node 8: Label 3| Node 269: Label 3| Node 2543: Label ?| Node 2551: Label 3| ```
        >>>
        ","""Task:NodeLblPred(?). AdjList:{269:[321,418,8,2543,2551],321:[269],418:[269],8:[269],2543:[269],2551:[269]}. NodeLblMap:321:3,418:3,8:3,269:3,2543:?,2551:3. RespFmt:Label of Node = <predLbl> or -1 if undetermined.""",28.614457831325304,70.58823529411765
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {607: [1664, 298, 1213], 1664: [607], 1095: [1986, 230, 298, 1325, 1810, 2613], 1986: [1095], 230: [1095, 1810], 1810: [230, 1095], 298: [1095, 607, 1325], 1325: [1095, 327, 1000, 298, 2247, 2063], 2613: [1095], 327: [1325, 2063], 2063: [327, 1325], 1000: [1325], 2247: [1325], 1213: [607]}
Node to Label Mapping : 
Node 1664: Label 3| Node 1986: Label 3| Node 230: Label 3| Node 1095: Label 3| Node 327: Label 3| Node 1000: Label 3| Node 298: Label 3| Node 2247: Label ?| Node 1325: Label 3| Node 2063: Label 3| Node 1810: Label 3| Node 2613: Label 3| Node 1213: Label 3| Node 607: Label 3| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{607:[1664,298,1213],1664:[607],1095:[1986,230,298,1325,1810,2613],1986:[1095],230:[1095,1810],1810:[230,1095],298:[1095,607,1325],1325:[1095,327,1000,298,2247,2063],2613:[1095],327:[1325,2063],2063:[327,1325],1000:[1325],2247:[1325],1213:[607]}. NodeLblMap:1664:3,1986:3,230:3,1095:3,327:3,1000:3,298:3,2247:?,1325:3,2063:3,1810:3,2613:3,1213:3,607:3. If ?=undetermined, return -1.""",40.99616858237548,73.37278106508876
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {399: [133, 544, 1089, 1769, 2107], 133: [399, 1623], 1623: [133, 1769, 1781], 1072: [773, 1801, 306, 1505], 773: [1072, 1505], 1505: [773, 1801, 1552, 530, 1699, 36, 2086, 1072, 2107, 330, 1624, 1146, 1788], 1801: [1072, 1505], 544: [399, 1769], 1089: [399, 1552, 2086], 1769: [399, 544, 1623], 2107: [399, 36, 1505, 1781], 36: [1552, 1146, 1505, 1640, 1781, 2094, 2106, 2107], 1552: [36, 1089, 1505], 530: [1505, 2094], 2094: [530, 36, 2086, 2106], 1699: [1505], 1146: [36, 1505], 1640: [36, 306], 1781: [36, 306, 2107, 1998, 1623], 2106: [36, 2094], 306: [2086, 1072, 1640, 1781], 2086: [306, 1089, 1505, 2094], 330: [1505], 1998: [1781], 1624: [1505, 1788], 1788: [1624, 1505]}
Node to Label Mapping : 
Node 133: Label 1| Node 773: Label 1| Node 1801: Label 0| Node 399: Label 1| Node 1552: Label 1| Node 530: Label 0| Node 544: Label 0| Node 1699: Label 1| Node 36: Label 1| Node 2086: Label 1| Node 2094: Label 1| Node 1072: Label 2| Node 306: Label 1| Node 2106: Label ?| Node 2107: Label 1| Node 1089: Label 1| Node 330: Label 4| Node 1998: Label 5| Node 1623: Label 1| Node 1624: Label 1| Node 1505: Label 1| Node 1640: Label 1| Node 1769: Label 1| Node 1781: Label 1| Node 1146: Label 1| Node 1788: Label 1| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{399:[133,544,1089,1769,2107],133:[399,1623],1623:[133,1769,1781],1072:[773,1801,306,1505],773:[1072,1505],1505:[773,1801,1552,530,1699,36,2086,1072,2107,330,1624,1146,1788],1801:[1072,1505],544:[399,1769],1089:[399,1552,2086],1769:[399,544,1623],2107:[399,36,1505,1781],36:[1552,1146,1505,1640,1781,2094,2106,2107],1552:[36,1089,1505],530:[1505,2094],2094:[530,36,2086,2106],1699:[1505],1146:[36,1505],1640:[36,306],1781:[36,306,2107,1998,1623],2106:[36,2094],306:[2086,1072,1640,1781],2086:[306,1089,1505,2094],330:[1505],1998:[1781],1624:[1505,1788],1788:[1624,1505]}. NodeLblMap:133:1,773:1,1801:0,399:1,1552:1,530:0,544:0,1699:1,36:1,2086:1,2094:1,1072:2,306:1,2106:?,2107:1,1089:1,330:4,1998:5,1623:1,1624:1,1505:1,1640:1,1769:1,1781:1,1146:1,1788:1""",50.3448275862069,73.12348668280872
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {2157: [1835, 108, 2158, 2159, 2160], 1835: [2157, 2160], 2160: [1835, 2157, 2159], 108: [2157], 2158: [2157], 2159: [2157, 2160]}
Node to Label Mapping : 
Node 1835: Label 6| Node 108: Label 6| Node 2157: Label 6| Node 2158: Label ?| Node 2159: Label 6| Node 2160: Label 6| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{2157:[1835,108,2158,2159,2160],1835:[2157,2160],2160:[1835,2157,2159],108:[2157],2158:[2157],2159:[2157,2160]}. NodeLblMap:1835:6,108:6,2157:6,2158:?,2159:6,2160:6. RespFmt:Label of Node = <predLbl> or -1 if undetermined.""",32.96398891966759,75.32467532467533
"
        Compress the following text in triple angular brackets '<<< >>>', into the size of a tweet such that you (GPT-4) can reconstruct the intention of the human who wrote text as close as possible to the original intention. Response format information given in the text needs to be retained in the reconstruction.This is for yourself. It does not need to be human readable or understandable. Abuse of language mixing, abbreviations, symbols (unicode and emoji), or any other encodings or internal representations is all permissible, as long as it, if pasted in a new inference cycle, will yield near-identical results as the original text.
        <<<
        Task : Node Label Prediction (Predict the label of the node marked with a ?, given the adjacency list information as a dictionary of type ""node:node neighborhood""
        and node-label mapping in the text enclosed in triple backticks. Response should be in the format ""Label of Node = <predicted label>"". If the predicted label cannot be determined, return ""Label of Node = -1"") 
        ```Adjacency list: {607: [1664, 298, 1213], 1664: [607], 1095: [1986, 230, 298, 1325, 1810, 2613], 1986: [1095], 230: [1095, 1810], 1810: [230, 1095], 298: [1095, 607, 1325], 1325: [1095, 327, 1000, 298, 2247, 2063], 2613: [1095], 327: [1325, 2063], 2063: [327, 1325], 1000: [1325], 2247: [1325], 1213: [607]}
Node to Label Mapping : 
Node 1664: Label 3| Node 1986: Label ?| Node 230: Label 3| Node 1095: Label 3| Node 327: Label 3| Node 1000: Label 3| Node 298: Label 3| Node 2247: Label 3| Node 1325: Label 3| Node 2063: Label 3| Node 1810: Label 3| Node 2613: Label 3| Node 1213: Label 3| Node 607: Label 3| ```
        >>>
        ","""Task:NodeLblPred. AdjList:{607:[1664,298,1213],1664:[607],1095:[1986,230,298,1325,1810,2613],1986:[1095],230:[1095,1810],1810:[230,1095],298:[1095,607,1325],1325:[1095,327,1000,298,2247,2063],2613:[1095],327:[1325,2063],2063:[327,1325],1000:[1325],2247:[1325],1213:[607]}. NodeLblMap:1664:3,1986:?,230:3,1095:3,327:3,1000:3,298:3,2247:3,1325:3,2063:3,1810:3,2613:3,1213:3,607:3. If ?=return -1""",40.42145593869732,73.37278106508876
